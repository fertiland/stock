{"ast":null,"code":"var _jsxFileName = \"/home/hsing/pro/stock-analysis-app/src/components/PriceChart/index.js\";\nimport React from 'react';\nimport { Box, Button } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PriceChart = ({\n  data,\n  onDataUpload\n}) => {\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        dynamicTyping: true,\n        complete: result => {\n          const formattedData = result.data.map(item => ({\n            date: item.Date,\n            price: item.Close,\n            volume: item.Volume\n          }));\n          onDataUpload(formattedData); // Pass the data up to App\n        },\n        error: error => {\n          console.error('Error parsing file:', error);\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"label\",\n      sx: {\n        mb: 2\n      },\n      children: [\"Upload Stock History\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        hidden: true,\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 700,\n      height: 300,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"price\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = PriceChart;\nvar _c;\n$RefreshReg$(_c, \"PriceChart\");","map":{"version":3,"names":["React","Box","Button","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Papa","jsxDEV","_jsxDEV","PriceChart","data","onDataUpload","handleFileUpload","event","file","target","files","parse","header","dynamicTyping","complete","result","formattedData","map","item","date","Date","price","Close","volume","Volume","error","console","sx","mb","children","variant","component","type","accept","hidden","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","width","height","strokeDasharray","dataKey","stroke","_c","$RefreshReg$"],"sources":["/home/hsing/pro/stock-analysis-app/src/components/PriceChart/index.js"],"sourcesContent":["import React from 'react';\nimport { Box, Button } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Papa from 'papaparse';\n\nexport const PriceChart = ({ data, onDataUpload }) => {\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        dynamicTyping: true,\n        complete: (result) => {\n          const formattedData = result.data.map((item) => ({\n            date: item.Date,\n            price: item.Close,\n            volume: item.Volume\n          }));\n          onDataUpload(formattedData); // Pass the data up to App\n        },\n        error: (error) => {\n          console.error('Error parsing file:', error);\n        },\n      });\n    }\n  };\n\n  return (\n    <Box sx={{ mb: 4 }}>\n      <Button\n        variant=\"contained\"\n        component=\"label\"\n        sx={{ mb: 2 }}\n      >\n        Upload Stock History\n        <input\n          type=\"file\"\n          accept=\".csv\"\n          hidden\n          onChange={handleFileUpload}\n        />\n      </Button>\n      {data.length > 0 && (\n        <LineChart width={700} height={300} data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" />\n        </LineChart>\n      )}\n    </Box>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}