{"ast":null,"code":"var _jsxFileName = \"/home/hsing/pro/stock-analysis-app/src/components/PriceChart/index.js\",\n  _s = $RefreshSig$();\n// src/components/PriceChart/index.js\nimport React, { useState } from 'react';\nimport { Box, Button } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Papa from 'papaparse'; // Install this with `npm install papaparse`\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PriceChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        dynamicTyping: true,\n        complete: result => {\n          // Ensure the parsed data has 'date' and 'price' fields\n          const formattedData = result.data.map(item => ({\n            date: item.date,\n            price: item.close\n          }));\n          console.info('loaded data:', formattedData);\n          setData(formattedData);\n        },\n        error: error => {\n          console.error('Error parsing file:', error);\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"label\",\n      sx: {\n        mb: 2\n      },\n      children: [\"Upload Stock History\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        hidden: true,\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 700,\n      height: 300,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"price\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PriceChart, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = PriceChart;\nvar _c;\n$RefreshReg$(_c, \"PriceChart\");","map":{"version":3,"names":["React","useState","Box","Button","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Papa","jsxDEV","_jsxDEV","PriceChart","_s","data","setData","handleFileUpload","event","file","target","files","parse","header","dynamicTyping","complete","result","formattedData","map","item","date","price","close","console","info","error","sx","mb","children","variant","component","type","accept","hidden","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","width","height","strokeDasharray","dataKey","stroke","_c","$RefreshReg$"],"sources":["/home/hsing/pro/stock-analysis-app/src/components/PriceChart/index.js"],"sourcesContent":["// src/components/PriceChart/index.js\nimport React, { useState } from 'react';\nimport { Box, Button } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Papa from 'papaparse'; // Install this with `npm install papaparse`\n\nexport const PriceChart = () => {\n  const [data, setData] = useState([]);\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        dynamicTyping: true,\n        complete: (result) => {\n          // Ensure the parsed data has 'date' and 'price' fields\n          const formattedData = result.data.map((item) => ({\n            date: item.date,\n            price: item.close,\n          }));\n          console.info('loaded data:', formattedData)\n          setData(formattedData);\n        },\n        error: (error) => {\n          console.error('Error parsing file:', error);\n        },\n      });\n    }\n  };\n\n  return (\n    <Box sx={{ mb: 4 }}>\n      <Button\n        variant=\"contained\"\n        component=\"label\"\n        sx={{ mb: 2 }}\n      >\n        Upload Stock History\n        <input\n          type=\"file\"\n          accept=\".csv\"\n          hidden\n          onChange={handleFileUpload}\n        />\n      </Button>\n      {data.length > 0 && (\n        <LineChart width={700} height={300} data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" />\n        </LineChart>\n      )}\n    </Box>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}